// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=load, out=notLoad);
    Not(in=reset, out=notReset);

    Mux16(a=prevOut, b=false, sel=reset, out=outReset);
    And(a=load, b=notReset, out=loadNotReset);
    // load only if load & !reset, so ^
    Mux16(a=outReset, b=in, sel=loadNotReset, out=outLoad);

    And(a=inc, b=notLoad, out=incNotLoad);
    And(a=incNotLoad, b=notReset, out=incNotLoadNotReset);
    // inc only if inc & !load & !reset, so ^
    Inc16(in=prevOut, out=prevOutInc);
    Mux16(a=outLoad, b=prevOutInc,
          sel=incNotLoadNotReset, out=outCombinational);

    Register(in=outCombinational, load=true,
             out=prevOut, out=out);
}
